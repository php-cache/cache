name: CI

on:
  pull_request: ~
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0']

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@2.7.0
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download phpunit
        run: |
          rm composer.*
          composer init --no-interaction --name "php-cache/cache"

          echo ::group::Download
          composer require symfony/phpunit-bridge
          echo ::endgroup::

          echo ::group::Install
          ./vendor/bin/simple-phpunit install
          echo ::endgroup::

      - name: Modify composer.json
        run: |
          CURRENT_DIR=$(pwd)
          for PACKAGE in $(find src -maxdepth 4 -type f -name phpunit.xml.dist -printf '%h\n' | sort)
          do
            echo ::group::mi$PACKAGE
            echo "$CURRENT_DIR/$PACKAGE"
            cd "$CURRENT_DIR/$PACKAGE"

            sed -i -re 's/"require": \{/"minimum-stability": "dev","prefer-stable": true,"require": \{/' composer.json
            cat composer.json

            echo ::endgroup::
          done

      - name: Download dependencies
        env:
          PHP_VERSION: ${{ matrix.php }}
        run: |
          CURRENT_DIR=$(pwd)
          for PACKAGE in $(find src -maxdepth 4 -type f -name phpunit.xml.dist -printf '%h\n' | sort)
          do
            echo ::group::$PACKAGE
            echo "$CURRENT_DIR/$PACKAGE"
            cd "$CURRENT_DIR/$PACKAGE"

            localExit=0
            if [ $PHP_VERSION = '8.0' ]; then
              COMPOSER_OPTIONS=' --ignore-platform-req=php'
            fi
            composer update --no-interaction --prefer-dist --optimize-autoloader $COMPOSER_OPTIONS || localExit=1
            echo ::endgroup::
            if [ $localExit -ne 0 ]; then
              echo "::error::$PACKAGE error"
              exit $localExit
            fi
          done

      - name: Run tests
        run: |
          ok=0
          for PACKAGE in $(find src -maxdepth 4 -type f -name phpunit.xml.dist -printf '%h\n' | sort)
          do
            echo ::group::$PACKAGE
            localExit=0
            ./vendor/bin/simple-phpunit -c ./$PACKAGE 2>&1 || localExit=1
            ok=$(( $localExit || $ok ))
            echo ::endgroup::
            if [ $localExit -ne 0 ]; then
              echo "::error::$PACKAGE failed"
            fi
          done

          exit $ok
